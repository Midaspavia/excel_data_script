#!/usr/bin/env python3
"""
Setup-Skript zur √úberpr√ºfung und Installation aller notwendigen Abh√§ngigkeiten
f√ºr das Excel-Datenverarbeitungsprojekt mit Refinitiv-Integration.
"""

import sys
import subprocess
import importlib
import os

def check_python_version():
    """√úberpr√ºft die Python-Version"""
    print("üîç √úberpr√ºfe Python-Version...")
    if sys.version_info < (3, 8):
        print("‚ùå Python 3.8 oder h√∂her ist erforderlich!")
        print(f"   Aktuelle Version: {sys.version}")
        return False
    print(f"‚úÖ Python-Version OK: {sys.version_info.major}.{sys.version_info.minor}.{sys.version_info.micro}")
    return True

def install_package(package_name, import_name=None):
    """Installiert ein Python-Package"""
    if import_name is None:
        import_name = package_name

    try:
        importlib.import_module(import_name)
        print(f"‚úÖ {package_name} ist bereits installiert")
        return True
    except ImportError:
        print(f"üì¶ Installiere {package_name}...")
        try:
            subprocess.check_call([sys.executable, "-m", "pip", "install", package_name])
            print(f"‚úÖ {package_name} erfolgreich installiert")
            return True
        except subprocess.CalledProcessError as e:
            print(f"‚ùå Fehler beim Installieren von {package_name}: {e}")
            return False

def test_package_functionality():
    """Testet die Funktionalit√§t der installierten Pakete"""
    print("\nüß™ Teste Paket-Funktionalit√§t...")

    # Test Pandas
    try:
        import pandas as pd
        df = pd.DataFrame({'test': [1, 2, 3]})
        print("‚úÖ Pandas funktioniert korrekt")
    except Exception as e:
        print(f"‚ùå Pandas-Test fehlgeschlagen: {e}")
        return False

    # Test Openpyxl (f√ºr Excel)
    try:
        import openpyxl
        print("‚úÖ Openpyxl (Excel-Support) funktioniert korrekt")
    except Exception as e:
        print(f"‚ùå Openpyxl-Test fehlgeschlagen: {e}")
        return False

    # Test Refinitiv Data
    try:
        import refinitiv.data as rd
        print("‚úÖ Refinitiv Data Library importiert")

        # Test ob Desktop Session verf√ºgbar ist
        try:
            session = rd.open_session()
            if session:
                print("‚úÖ Refinitiv Desktop Session erfolgreich ge√∂ffnet")
                rd.close_session()
            else:
                print("‚ö†Ô∏è  Refinitiv Desktop Session konnte nicht ge√∂ffnet werden")
                print("    Stelle sicher, dass Refinitiv Workspace l√§uft")
        except Exception as e:
            print(f"‚ö†Ô∏è  Refinitiv Session-Test: {e}")
            print("    Das ist normal, wenn Refinitiv Workspace nicht l√§uft")

    except Exception as e:
        print(f"‚ùå Refinitiv Data-Test fehlgeschlagen: {e}")
        return False

    # Test xlsxwriter (f√ºr sch√∂ne Excel-Ausgaben)
    try:
        import xlsxwriter
        print("‚úÖ XlsxWriter funktioniert korrekt")
    except Exception as e:
        print(f"‚ùå XlsxWriter-Test fehlgeschlagen: {e}")
        return False

    return True

def check_refinitiv_workspace():
    """√úberpr√ºft ob Refinitiv Workspace l√§uft"""
    print("\nüîç √úberpr√ºfe Refinitiv Workspace...")

    try:
        import refinitiv.data as rd
        session = rd.open_session()
        if session:
            print("‚úÖ Refinitiv Workspace l√§uft und ist verbunden")
            rd.close_session()
            return True
        else:
            print("‚ùå Refinitiv Workspace ist nicht verbunden")
            return False
    except Exception as e:
        print(f"‚ùå Refinitiv Workspace-Fehler: {e}")
        return False

def main():
    """Hauptfunktion zur Ausf√ºhrung der Setup-Checks"""
    print("üîß Setup-√úberpr√ºfung f√ºr Excel-Datenverarbeitungsprojekt\n")

    # Pr√ºfe Python-Version
    if not check_python_version():
        print("\n‚ùå Setup fehlgeschlagen: Python-Version nicht kompatibel")
        return False

    # Installiere Abh√§ngigkeiten
    packages = [
        ("pandas", None),
        ("openpyxl", None),
        ("xlsxwriter", None),
        ("refinitiv-data", "refinitiv.data")  # F√ºge refinitiv-data Paket hinzu
    ]

    success = True
    for package_name, import_name in packages:
        if not install_package(package_name, import_name):
            success = False

    if not success:
        print("\n‚ö†Ô∏è Einige Pakete konnten nicht installiert werden")
        print("   Bitte installiere sie manuell mit pip install <paketname>")

    # Teste Funktionalit√§t
    if not test_package_functionality():
        print("\n‚ö†Ô∏è Einige Pakete funktionieren nicht wie erwartet")

    # Pr√ºfe Refinitiv Workspace
    check_refinitiv_workspace()

    print("\n‚úÖ Setup abgeschlossen!")
    return True

if __name__ == "__main__":
    main()
